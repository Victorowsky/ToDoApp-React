{"version":3,"sources":["Components/Tasks.js","App.js","index.js"],"names":["Tasks","tasks","handleDelete","createTask","map","task","index","style","userData","important","border","onClick","data-index","_id","key","text","position","right","className","App","useState","setTasks","localStorage","getItem","setItem","Math","floor","random","reloadData","setReloadData","currentTask","setCurrentTask","importantChecked","setImportantChecked","userID","useEffect","fetch","then","res","json","data","handleAddTask","e","preventDefault","method","mode","onSubmit","formMethod","TextField","id","label","color","value","onChange","target","Checkbox","checked","width","prev","inputProps","Button","variant","type","marginTop","marginLeft","marginRight","window","confirm","dataset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAoCeA,G,MAjCD,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAChBC,EAAaF,EAAMG,KAAI,SAACC,EAAMC,GAClC,IAAMC,EAAQF,EAAKG,SAASC,UACxB,CACEC,OAAQ,iBAEV,GACJ,OACE,wBACEC,QAAST,EACTU,aAAYP,EAAKQ,IACjBC,IAAKR,EACLC,MAAOA,GAEP,uBAAGK,aAAYP,EAAKQ,KACjBP,EAAQ,EADX,IACeD,EAAKG,SAASO,MAE7B,kBAAC,IAAD,CACEH,aAAYP,EAAKQ,IACjBN,MAAO,CAAES,SAAU,WAAYC,MAAO,YAM9C,OACE,yBAAKC,UAAU,YACb,gDACA,4BAAKf,M,gBCoEIgB,MA5Ff,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNnB,EADM,KACCoB,EADD,KAERC,aAAaC,QAAQ,WACxBD,aAAaE,QAAQ,SAAUC,KAAKC,MAAsB,IAAhBD,KAAKE,WAHpC,MAKuBP,mBAAS,GALhC,mBAKNQ,EALM,KAKMC,EALN,OAMyBT,mBAAS,IANlC,mBAMNU,EANM,KAMOC,EANP,OAOmCX,oBAAS,GAP5C,mBAONY,EAPM,KAOYC,EAPZ,KASPC,EAASZ,aAAaC,QAAQ,UAEpCY,qBAAU,WACRC,MAAM,sDAAD,OAAuDF,IACzDG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUnB,EAASmB,QAC1B,CAACZ,IAEJ,IAAMa,EAAgB,SAACC,GACrBA,EAAEC,iBACEb,IACFM,MAAM,qDAAD,OACkDN,EADlD,YACiEE,EADjE,YACqFE,GACxF,CACEU,OAAQ,OACRC,KAAM,YAERR,KAAKR,EAAcD,EAAa,IAClCK,GAAoB,GACpBF,EAAe,MAgBnB,OACE,yBAAKb,UAAU,OACb,yBAAKA,UAAU,WACb,0BAAM4B,SAAUL,EAAeM,WAAW,QACxC,yCACA,kBAACC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,mBACN3C,MAAO,CAAE4C,MAAO,oBAChBC,MAAOtB,EACPuB,SAAU,SAACX,GAAD,OAAOX,EAAeW,EAAEY,OAAOF,UAE3C,yBAAKlC,UAAU,YACb,kBAACqC,EAAA,EAAD,CACEC,QAASxB,EACTzB,MAAO,CACLkD,MAAO,eAETJ,SAAU,WACRpB,GAAoB,SAACyB,GAAD,OAAWA,MAEjCC,WAAY,CAAE,aAAc,sBAE9B,yCAGF,kBAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,KAAK,SACLvD,MAAO,CACLwD,UAAW,MACXN,MAAO,cACPO,WAAY,OACZC,YAAa,QAEfd,MAAM,UACNL,SAAUL,GAVZ,SAiBJ,kBAAC,EAAD,CAAOxC,MAAOA,EAAOC,aAvDA,SAACwC,GACTwB,OAAOC,QAAP,yCAEb/B,MAAM,wDAAD,OACqDM,EAAEY,OAAOc,QAAQ9D,OACzE,CACEsC,OAAQ,SAEVP,KAAKR,EAAcD,EAAa,SC1CxCyC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.aabfcaad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport \"./Tasks.css\";\r\nconst Tasks = ({ tasks, handleDelete }) => {\r\n  const createTask = tasks.map((task, index) => {\r\n    const style = task.userData.important\r\n      ? {\r\n          border: \"2px solid red\",\r\n        }\r\n      : {};\r\n    return (\r\n      <li\r\n        onClick={handleDelete}\r\n        data-index={task._id}\r\n        key={index}\r\n        style={style}\r\n      >\r\n        <p data-index={task._id}>\r\n          {index + 1}.{task.userData.text}\r\n        </p>\r\n        <DeleteForeverIcon\r\n          data-index={task._id}\r\n          style={{ position: \"relative\", right: \"2%\" }}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"taskList\">\r\n      <h2>Aktualne zadania</h2>\r\n      <ul>{createTask}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tasks from \"./Components/Tasks\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  if (!localStorage.getItem(\"userID\")) {\n    localStorage.setItem(\"userID\", Math.floor(Math.random() * 1000000000));\n  }\n  const [reloadData, setReloadData] = useState(1);\n  const [currentTask, setCurrentTask] = useState(\"\");\n  const [importantChecked, setImportantChecked] = useState(false);\n\n  const userID = localStorage.getItem(\"userID\");\n\n  useEffect(() => {\n    fetch(`https://just-cheddar-yumberry.glitch.me/take/tasks/${userID}`)\n      .then((res) => res.json())\n      .then((data) => setTasks(data));\n  }, [reloadData]);\n\n  const handleAddTask = (e) => {\n    e.preventDefault();\n    if (currentTask) {\n      fetch(\n        `https://just-cheddar-yumberry.glitch.me/add/tasks/${currentTask}/${importantChecked}/${userID}`,\n        {\n          method: \"POST\",\n          mode: \"no-cors\",\n        }\n      ).then(setReloadData(reloadData + 1)); //RELOAD DATA\n      setImportantChecked(false); // CLEAR IMPORTANT BUTTON\n      setCurrentTask(\"\"); // CLEAR INPUT\n    }\n  };\n\n  const handleDeleteTask = (e) => {\n    const answer = window.confirm(`Are you sure about delete this task?`);\n    if (answer) {\n      fetch(\n        `https://just-cheddar-yumberry.glitch.me/delete/tasks/${e.target.dataset.index}`,\n        {\n          method: \"POST\",\n        }\n      ).then(setReloadData(reloadData + 1)); //RELOAD DATA\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"addTask\">\n        <form onSubmit={handleAddTask} formMethod=\"POST\">\n          <h1> Add task</h1>\n          <TextField\n            id=\"standard-basic\"\n            label=\"Insert your task\"\n            style={{ color: \"white !important\" }}\n            value={currentTask}\n            onChange={(e) => setCurrentTask(e.target.value)}\n          />\n          <div className=\"checkbox\">\n            <Checkbox\n              checked={importantChecked}\n              style={{\n                width: \"fit-content\",\n              }}\n              onChange={() => {\n                setImportantChecked((prev) => !prev);\n              }}\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\n            />\n            <p>Important</p>\n          </div>\n\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            style={{\n              marginTop: \"5px\",\n              width: \"fit-content\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n            }}\n            color=\"primary\"\n            onSubmit={handleAddTask}\n          >\n            Add\n          </Button>\n        </form>\n      </div>\n\n      <Tasks tasks={tasks} handleDelete={handleDeleteTask} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}