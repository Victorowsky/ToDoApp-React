{"version":3,"sources":["Components/Tasks.js","App.js","index.js"],"names":["Tasks","tasks","handleDelete","isLoading","setIsLoading","useState","arrayCreated","setArrayCreated","createTask","map","task","index","style","userData","important","border","onClick","data-index","_id","key","text","position","right","className","CircularProgress","marginRight","marginLeft","marginTop","App","ApiURL","setTasks","reloadData","setReloadData","currentTask","setCurrentTask","importantChecked","setImportantChecked","localStorage","getItem","setItem","Math","floor","random","userID","useEffect","fetch","then","res","json","data","length","console","log","handleAddTask","e","preventDefault","method","mode","anime","targets","rotate","value","duration","onSubmit","formMethod","TextField","id","label","color","onChange","target","Checkbox","checked","width","prev","inputProps","Button","variant","type","window","confirm","dataset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.031eb019.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"./Tasks.css\";\r\nconst Tasks = ({ tasks, handleDelete, isLoading, setIsLoading }) => {\r\n  const [arrayCreated, setArrayCreated] = useState(false);\r\n  const createTask = tasks.map((task, index) => {\r\n    if (isLoading) setIsLoading(false);\r\n    if (!arrayCreated) setArrayCreated(true);\r\n    const style = task.userData.important\r\n      ? { \r\n          border: \"2px solid red\",\r\n        }\r\n      : {};\r\n    return (\r\n      <li\r\n        onClick={handleDelete}\r\n        data-index={task._id}\r\n        key={index}\r\n        style={style}\r\n      >\r\n        <p data-index={task._id}>\r\n          {index + 1}.{task.userData.text}\r\n        </p>\r\n        <DeleteForeverIcon\r\n          data-index={task._id}\r\n          style={{ position: \"relative\", right: \"2%\" }}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"taskList\">\r\n      <h2>Aktualne zadania</h2>\r\n      {!isLoading && arrayCreated ? (\r\n        <ul> {createTask} </ul>\r\n      ) : (\r\n        <CircularProgress\r\n          style={{ marginRight: \"auto\", marginLeft: \"auto\", marginTop: \"10px\" }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tasks from \"./Components/Tasks\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport anime from \"animejs/lib/anime.es.js\";\n\nfunction App() {\n  const ApiURL = \"https://testing-project9034.herokuapp.com\";\n  const [tasks, setTasks] = useState([]);\n\n  const [reloadData, setReloadData] = useState(1);\n  const [currentTask, setCurrentTask] = useState(\"\");\n  const [importantChecked, setImportantChecked] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  if (!localStorage.getItem(\"userID\")) {\n    localStorage.setItem(\"userID\", Math.floor(Math.random() * 1000000000));\n  }\n  const userID = localStorage.getItem(\"userID\");\n\n  useEffect(() => {\n    fetch(`${ApiURL}/take/tasks/${userID}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setTasks(data);\n        if (data.length === 0) {\n          setIsLoading(false);\n          console.log(isLoading);\n        }\n      });\n  }, [reloadData, userID]);\n\n  const handleAddTask = (e) => {\n    if (e) e.preventDefault();\n    if (currentTask) {\n      fetch(\n        `${ApiURL}/add/tasks/${currentTask}/${importantChecked}/${userID}`,\n        {\n          method: \"POST\",\n          mode: \"no-cors\",\n        }\n      ).then(() => setReloadData(reloadData + 1)); //RELOAD DATA\n      setImportantChecked(false); // CLEAR IMPORTANT BUTTON\n      setCurrentTask(\"\"); // CLEAR INPUT\n    }\n  };\n\n  const handleDeleteTask = (e) => {\n    const answer = window.confirm(`Are you sure about delete this task?`);\n    if (answer) {\n      fetch(`${ApiURL}/delete/tasks/${e.target.dataset.index}`, {\n        method: \"POST\",\n      }).then(() => setReloadData(reloadData + 1)); //RELOAD DATA\n    }\n  };\n\n  const handleAnimateRefreshBtn = () => {\n    anime({\n      targets: \".refreshIcon\",\n      rotate: {\n        value: [0, 360],\n      },\n\n      duration: 2000,\n    });\n  };\n\n  return (\n    <>\n      <RefreshIcon\n        className=\"refreshIcon\"\n        onClick={(e) => {\n          setReloadData(reloadData + 1);\n          handleAnimateRefreshBtn();\n        }}\n        // style={{ position: \"fixed\", top: \"1%\", left: \"97%\", cursor: \"pointer\" }}\n      />\n      <div className=\"app\">\n        <div className=\"addTask\">\n          <form onSubmit={handleAddTask} formMethod=\"POST\">\n            <h1> Add task</h1>\n            <TextField\n              id=\"standard-basic\"\n              label=\"Insert your task\"\n              style={{ color: \"white !important\" }}\n              value={currentTask}\n              onChange={(e) => setCurrentTask(e.target.value)}\n            />\n            <div className=\"checkbox\">\n              <Checkbox\n                checked={importantChecked}\n                style={{\n                  width: \"fit-content\",\n                }}\n                onChange={() => {\n                  setImportantChecked((prev) => !prev);\n                }}\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\n              />\n              <p>Important</p>\n            </div>\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              style={{\n                marginTop: \"5px\",\n                width: \"fit-content\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n              }}\n              color=\"primary\"\n              onSubmit={handleAddTask}\n            >\n              Add\n            </Button>\n          </form>\n        </div>\n\n        <Tasks\n          tasks={tasks}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          handleDelete={handleDeleteTask}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}